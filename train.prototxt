name: "TS-DSN"
layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  hdf5_data_param {
    source: "/home/data/train.list"
    batch_size: 1
    shuffle: true
  }
}
layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  hdf5_data_param {
    source: "/home/data/test.list"
    batch_size: 1
    shuffle: true
  }
}
#########################################
##layer 1
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    axis: 1
    num_output: 32
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
	engine: CAFFE
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
     
  }
}
layer {
   bottom: "conv1a"
   top: "conv1a"
   name:"conv1_batch"
   type:"BatchNorm"
   param {
    lr_mult: 0
   }
   param {
    lr_mult: 0
   }
   param {
     lr_mult: 0
   }
}

layer {
   bottom: "conv1a"
   top: "conv1a"
   name: "conv1_scale"
   type: "Scale"
   scale_param {
     bias_term: true
   }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
  relu_param {
    engine: CAFFE
  }
}

layer {
  name: "pool1"
  type: "PoolingND"
  bottom: "conv1a"
  top: "pool1"
  pooling_nd_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
##layer 2
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    axis: 1
    num_output: 64
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
	engine: CAFFE
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
     
  }
}
layer {
   bottom: "conv2a"
   top: "conv2a"
   name:"conv2a_batch"
   type:"BatchNorm"
   param {
    lr_mult: 0
   }
   param {
    lr_mult: 0
   }
   param {
     lr_mult: 0
   }
}

layer {
   bottom: "conv2a"
   top: "conv2a"
   name: "conv2a_scale"
   type: "Scale"
   scale_param {
     bias_term: true
   }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
  relu_param {
    engine: CAFFE
  }
}

layer {
  name: "conv2b"
  type: "Convolution"
  bottom: "conv2a"
  top: "conv2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    axis: 1
    num_output: 64
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
	engine: CAFFE
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
     
  }
}
layer {
   bottom: "conv2b"
   top: "conv2b"
   name:"conv2b_batch"
   type:"BatchNorm"
   param {
    lr_mult: 0
   }
   param {
    lr_mult: 0
   }
   param {
     lr_mult: 0
   }
}

layer {
   bottom: "conv2b"
   top: "conv2b"
   name: "conv2b_scale"
   type: "Scale"
   scale_param {
     bias_term: true
   }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2b"
  top: "conv2b"
  relu_param {
    engine: CAFFE
  }
}

layer {
  name: "pool2"
  type: "PoolingND"
  bottom: "conv2b"
  top: "pool2"
  pooling_nd_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

##layer 3
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    axis: 1
    num_output: 128
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
	engine: CAFFE
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
     
  }
}
layer {
   bottom: "conv3a"
   top: "conv3a"
   name:"conv3a_batch"
   type:"BatchNorm"
   param {
    lr_mult: 0
   }
   param {
    lr_mult: 0
   }
   param {
     lr_mult: 0
   }
}

layer {
   bottom: "conv3a"
   top: "conv3a"
   name: "conv3a_scale"
   type: "Scale"
   scale_param {
     bias_term: true
   }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
  relu_param {
    engine: CAFFE
  }
}

layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    axis: 1
    num_output: 128
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
	engine: CAFFE
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
     
  }
}
layer {
   bottom: "conv3b"
   top: "conv3b"
   name:"conv3b_batch"
   type:"BatchNorm"
   param {
    lr_mult: 0
   }
   param {
    lr_mult: 0
   }
   param {
     lr_mult: 0
   }
}

layer {
   bottom: "conv3b"
   top: "conv3b"
   name: "conv3b_scale"
   type: "Scale"
   scale_param {
     bias_term: true
   }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
  relu_param {
    engine: CAFFE
  }
}
layer {
  name: "pool3"
  type: "PoolingND"
  bottom: "conv3b"
  top: "pool3"
  pooling_nd_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
##layer 4
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    axis: 1
    num_output: 256
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
	engine: CAFFE
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
     
  }
}
layer {
   bottom: "conv4a"
   top: "conv4a"
   name:"conv4a_batch"
   type:"BatchNorm"
   param {
    lr_mult: 0
   }
   param {
    lr_mult: 0
   }
   param {
     lr_mult: 0
   }
}

layer {
   bottom: "conv4a"
   top: "conv4a"
   name: "conv4a_scale"
   type: "Scale"
   scale_param {
     bias_term: true
   }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
  relu_param {
    engine: CAFFE
  }
}

layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    axis: 1
    num_output: 256
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
	engine: CAFFE
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
     
  }
}
layer {
   bottom: "conv4b"
   top: "conv4b"
   name:"conv4b_batch"
   type:"BatchNorm"
   param {
    lr_mult: 0
   }
   param {
    lr_mult: 0
   }
   param {
     lr_mult: 0
   }
}

layer {
   bottom: "conv4b"
   top: "conv4b"
   name: "conv4b_scale"
   type: "Scale"
   scale_param {
     bias_term: true
   }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
  relu_param {
    engine: CAFFE
  }
}

#### upsampling path ############
##Deconv1
layer {
  name: "Deconv1a"
  type: "Deconvolution"
  bottom: "conv4b"
  top: "Deconv1a"
  convolution_param {
    kernel_size: 4
    stride: 2
    num_output: 128
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
	engine: CAFFE
  }
}

##Deconv2
layer {
  name: "Deconv2a"
  type: "Deconvolution"
  bottom: "Deconv1a"
  top: "Deconv2a"
  convolution_param {
    kernel_size: 4
    stride: 2
    num_output: 64
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
	engine: CAFFE
  }
}

##Deconv3
layer {
  name: "Deconv3a"
  type: "Deconvolution"
  bottom: "Deconv2a"
  top: "Deconv3a"
  convolution_param {
    kernel_size: 4
    stride: 2
    num_output: 32
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
	engine: CAFFE
  }
}


########################################
#loss
layer {
  name: "score_main"
  type: "Convolution"
  bottom: "Deconv3a"
  top: "score_main"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 7
    kernel_size: 1
	engine: CAFFE
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
  }
}
layer {
  name:"loss_main"
  type: "SoftmaxWithLoss"
  bottom: "score_main"
  bottom: "label"
  top: "loss_main"
  loss_weight: 5
}

#loss_aux1
layer {
  name: "Deconv_aux1a"
  type: "Deconvolution"
  bottom: "conv2b"
  top: "Deconv_aux1a"
  convolution_param {
    kernel_size: 4
    stride: 2
    num_output: 32
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
    bias_term: false
	engine: CAFFE
  }
  param { 
    lr_mult: 0.1 
    decay_mult: 1 
  }
}

layer {
  name: "score_aux1"
  type: "Convolution"
  bottom: "Deconv_aux1a"
  top: "score_aux1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 7
    kernel_size: 1
	engine: CAFFE
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
  }
}
layer {
  name:"loss_aux1"
  type: "SoftmaxWithLoss"
  bottom: "score_aux1"
  bottom: "label"
  loss_weight: 1
}

#loss_aux2
layer {
  name: "Deconv_aux2a"
  type: "Deconvolution"
  bottom: "conv3b"
  top: "Deconv_aux2a"
  convolution_param {
    kernel_size: 4
    stride: 2
    num_output: 64
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
    bias_term: false
	engine: CAFFE
  }
  param { 
    lr_mult: 0.1 
    decay_mult: 1 
  }
}
layer {
  name: "Deconv_aux2b"
  type: "Deconvolution"
  bottom: "Deconv_aux2a"
  top: "Deconv_aux2b"
  convolution_param {
    kernel_size: 4
    stride: 2
    num_output: 32
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
    bias_term: false
	engine: CAFFE
  }
  param { 
    lr_mult: 0.1 
    decay_mult: 1 
  }
}
layer {
  name: "score_aux2"
  type: "Convolution"
  bottom: "Deconv_aux2b"
  top: "score_aux2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 7
    kernel_size: 1
	engine: CAFFE
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      std: 0
    }
  }
}
layer {
  name:"loss_aux2"
  type: "SoftmaxWithLoss"
  bottom: "score_aux2"
  bottom: "label"
  loss_weight: 2
  include {
    phase: TRAIN
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "score_main"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
